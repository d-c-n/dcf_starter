/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */,
/* 1 */,
/* 2 */,
/* 3 */
/*!**********************************************************!*\
  !*** ./theme/example/js/loaders/theme_body_js_loader.js ***!
  \**********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar dcf_core_body = __webpack_require__(/*! ../../../../core/js/core-body.js */ 4);\n\n// example: const ______ = require(relative filepath from this file)\n// const example_js = require('../src/example.js');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy90aGVtZS9leGFtcGxlL2pzL2xvYWRlcnMvdGhlbWVfYm9keV9qc19sb2FkZXIuanM/Yjg2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkY2ZfY29yZV9ib2R5ID0gcmVxdWlyZSgnLi4vLi4vLi4vLi4vY29yZS9qcy9jb3JlLWJvZHkuanMnKTtcblxuLy8gZXhhbXBsZTogY29uc3QgX19fX19fID0gcmVxdWlyZShyZWxhdGl2ZSBmaWxlcGF0aCBmcm9tIHRoaXMgZmlsZSlcbi8vIGNvbnN0IGV4YW1wbGVfanMgPSByZXF1aXJlKCcuLi9zcmMvZXhhbXBsZS5qcycpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHRoZW1lL2V4YW1wbGUvanMvbG9hZGVycy90aGVtZV9ib2R5X2pzX2xvYWRlci5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/*!******************************!*\
  !*** ./core/js/core-body.js ***!
  \******************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/******/(function (modules) {\n  // webpackBootstrap\n  /******/ // The module cache\n  /******/var installedModules = {};\n  /******/\n  /******/ // The require function\n  /******/function __webpack_require__(moduleId) {\n    /******/\n    /******/ // Check if module is in cache\n    /******/if (installedModules[moduleId]) {\n      /******/return installedModules[moduleId].exports;\n      /******/\n    }\n    /******/ // Create a new module (and put it into the cache)\n    /******/var module = installedModules[moduleId] = {\n      /******/i: moduleId,\n      /******/l: false,\n      /******/exports: {}\n      /******/ };\n    /******/\n    /******/ // Execute the module function\n    /******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/ // Flag the module as loaded\n    /******/module.l = true;\n    /******/\n    /******/ // Return the exports of the module\n    /******/return module.exports;\n    /******/\n  }\n  /******/\n  /******/\n  /******/ // expose the modules object (__webpack_modules__)\n  /******/__webpack_require__.m = modules;\n  /******/\n  /******/ // expose the module cache\n  /******/__webpack_require__.c = installedModules;\n  /******/\n  /******/ // define getter function for harmony exports\n  /******/__webpack_require__.d = function (exports, name, getter) {\n    /******/if (!__webpack_require__.o(exports, name)) {\n      /******/Object.defineProperty(exports, name, {\n        /******/configurable: false,\n        /******/enumerable: true,\n        /******/get: getter\n        /******/ });\n      /******/\n    }\n    /******/\n  };\n  /******/\n  /******/ // getDefaultExport function for compatibility with non-harmony modules\n  /******/__webpack_require__.n = function (module) {\n    /******/var getter = module && module.__esModule ?\n    /******/function getDefault() {\n      return module['default'];\n    } :\n    /******/function getModuleExports() {\n      return module;\n    };\n    /******/__webpack_require__.d(getter, 'a', getter);\n    /******/return getter;\n    /******/\n  };\n  /******/\n  /******/ // Object.prototype.hasOwnProperty.call\n  /******/__webpack_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  /******/\n  /******/ // __webpack_public_path__\n  /******/__webpack_require__.p = \"\";\n  /******/\n  /******/ // Load entry module and return exports\n  /******/return __webpack_require__(__webpack_require__.s = 332);\n  /******/\n})(\n/************************************************************************/\n/******/{\n\n  /***/332:\n  /*!************************************************!*\\\n    !*** ./core/js/loaders/core_body_js_loader.js ***!\n    \\************************************************/\n  /*! dynamic exports provided */\n  /*! all exports used */\n  /***/function _(module, exports, __webpack_require__) {\n\n    eval(\"// object-fit\\nconst dcf_objectfit = __webpack_require__(/*! ../app/object-fit.js */ 334);\\n\\n\\n// lazy load\\nconst dcf_lazyload = __webpack_require__(/*! ../app/lazy-load.js */ 333);\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY29yZS9qcy9sb2FkZXJzL2NvcmVfYm9keV9qc19sb2FkZXIuanM/OGJlNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBvYmplY3QtZml0XG5jb25zdCBkY2Zfb2JqZWN0Zml0ID0gcmVxdWlyZSgnLi4vYXBwL29iamVjdC1maXQuanMnKTtcblxuXG4vLyBsYXp5IGxvYWRcbmNvbnN0IGRjZl9sYXp5bG9hZCA9IHJlcXVpcmUoJy4uL2FwcC9sYXp5LWxvYWQuanMnKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29yZS9qcy9sb2FkZXJzL2NvcmVfYm9keV9qc19sb2FkZXIuanNcbi8vIG1vZHVsZSBpZCA9IDMzMlxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///332\\n\");\n\n    /***/\n  },\n\n  /***/333:\n  /*!**********************************!*\\\n    !*** ./core/js/app/lazy-load.js ***!\n    \\**********************************/\n  /*! dynamic exports provided */\n  /*! all exports used */\n  /***/function _(module, exports) {\n\n    eval(\"// https://github.com/deanhume/lazy-observer-load/blob/master/lazy-load.js\\n\\n// Get all of the images that are marked up to lazy load\\nconst images = document.querySelectorAll('.dcf-js-lazy-img');\\nconst config = {\\n  // If the image gets within 50px in the Y axis, start the download.\\n//   rootMargin: '0px 0px 50px 0px',\\n  rootMargin: '0px',\\n//   threshold: 0.01\\n  threshold: 0.5\\n};\\n\\nlet imageCount = images.length;\\nlet observer;\\n\\n// If we don't have support for intersection observer, loads the images immediately\\nif (!('IntersectionObserver' in window)) {\\n  loadImagesImmediately(images);\\n} else {\\n  // It is supported, load the images\\n  observer = new IntersectionObserver(onIntersection, config);\\n\\n  // foreach() is not supported in IE\\n  for (let i = 0; i < images.length; i++) {\\n    let image = images[i];\\n    if (image.classList.contains('dcf-js-lazy-img--handled')) {\\n      continue;\\n    }\\n\\n    observer.observe(image);\\n  }\\n}\\n\\n/**\\n * Fetches the image for the given URL\\n * @param {string} url\\n */\\nfunction fetchImage(url) {\\n  return new Promise((resolve, reject) => {\\n    const image = new Image();\\n    image.src = url;\\n    image.onload = resolve;\\n    image.onerror = reject;\\n  });\\n}\\n\\n/**\\n * Preloads the image\\n * @param {object} image\\n */\\nfunction preloadImage(image) {\\n  const src = image.dataset.src;\\n  if (!src) {\\n    return;\\n  }\\n\\n  return fetchImage(src).then(() => { applyImage(image, src); });\\n}\\n\\n/**\\n * Load all of the images immediately\\n * @param {NodeListOf<Element>} images\\n */\\nfunction loadImagesImmediately(images) {\\n  // foreach() is not supported in IE\\n  for (let i = 0; i < images.length; i++) {\\n    let image = images[i];\\n    preloadImage(image);\\n  }\\n}\\n\\n/**\\n * Disconnect the observer\\n */\\nfunction disconnect() {\\n  if (!observer) {\\n    return;\\n  }\\n\\n  observer.disconnect();\\n}\\n\\n/**\\n * On intersection\\n * @param {array} entries\\n */\\nfunction onIntersection(entries) {\\n  // Disconnect if we've already loaded all of the images\\n  if (imageCount === 0) {\\n    observer.disconnect();\\n  }\\n\\n  // Loop through the entries\\n  for (let i = 0; i < entries.length; i++) {\\n    let entry = entries[i];\\n    // Are we in viewport?\\n    if (entry.intersectionRatio > 0) {\\n      imageCount--;\\n\\n      // Stop watching and load the image\\n      observer.unobserve(entry.target);\\n      preloadImage(entry.target);\\n    }\\n  }\\n}\\n\\n/**\\n * Apply the image\\n * @param {object} img\\n * @param {string} src\\n */\\nfunction applyImage(img, src) {\\n  // Prevent this from being lazy loaded a second time.\\n  img.classList.add('dcf-js-lazy-img--handled');\\n  img.src = src;\\n  img.classList.add('dcf-js-fade-up');\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY29yZS9qcy9hcHAvbGF6eS1sb2FkLmpzP2QxYjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaHR0cHM6Ly9naXRodWIuY29tL2RlYW5odW1lL2xhenktb2JzZXJ2ZXItbG9hZC9ibG9iL21hc3Rlci9sYXp5LWxvYWQuanNcblxuLy8gR2V0IGFsbCBvZiB0aGUgaW1hZ2VzIHRoYXQgYXJlIG1hcmtlZCB1cCB0byBsYXp5IGxvYWRcbmNvbnN0IGltYWdlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kY2YtanMtbGF6eS1pbWcnKTtcbmNvbnN0IGNvbmZpZyA9IHtcbiAgLy8gSWYgdGhlIGltYWdlIGdldHMgd2l0aGluIDUwcHggaW4gdGhlIFkgYXhpcywgc3RhcnQgdGhlIGRvd25sb2FkLlxuLy8gICByb290TWFyZ2luOiAnMHB4IDBweCA1MHB4IDBweCcsXG4gIHJvb3RNYXJnaW46ICcwcHgnLFxuLy8gICB0aHJlc2hvbGQ6IDAuMDFcbiAgdGhyZXNob2xkOiAwLjVcbn07XG5cbmxldCBpbWFnZUNvdW50ID0gaW1hZ2VzLmxlbmd0aDtcbmxldCBvYnNlcnZlcjtcblxuLy8gSWYgd2UgZG9uJ3QgaGF2ZSBzdXBwb3J0IGZvciBpbnRlcnNlY3Rpb24gb2JzZXJ2ZXIsIGxvYWRzIHRoZSBpbWFnZXMgaW1tZWRpYXRlbHlcbmlmICghKCdJbnRlcnNlY3Rpb25PYnNlcnZlcicgaW4gd2luZG93KSkge1xuICBsb2FkSW1hZ2VzSW1tZWRpYXRlbHkoaW1hZ2VzKTtcbn0gZWxzZSB7XG4gIC8vIEl0IGlzIHN1cHBvcnRlZCwgbG9hZCB0aGUgaW1hZ2VzXG4gIG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKG9uSW50ZXJzZWN0aW9uLCBjb25maWcpO1xuXG4gIC8vIGZvcmVhY2goKSBpcyBub3Qgc3VwcG9ydGVkIGluIElFXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgaW1hZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IGltYWdlID0gaW1hZ2VzW2ldO1xuICAgIGlmIChpbWFnZS5jbGFzc0xpc3QuY29udGFpbnMoJ2RjZi1qcy1sYXp5LWltZy0taGFuZGxlZCcpKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBvYnNlcnZlci5vYnNlcnZlKGltYWdlKTtcbiAgfVxufVxuXG4vKipcbiAqIEZldGNoZXMgdGhlIGltYWdlIGZvciB0aGUgZ2l2ZW4gVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsXG4gKi9cbmZ1bmN0aW9uIGZldGNoSW1hZ2UodXJsKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgICBpbWFnZS5zcmMgPSB1cmw7XG4gICAgaW1hZ2Uub25sb2FkID0gcmVzb2x2ZTtcbiAgICBpbWFnZS5vbmVycm9yID0gcmVqZWN0O1xuICB9KTtcbn1cblxuLyoqXG4gKiBQcmVsb2FkcyB0aGUgaW1hZ2VcbiAqIEBwYXJhbSB7b2JqZWN0fSBpbWFnZVxuICovXG5mdW5jdGlvbiBwcmVsb2FkSW1hZ2UoaW1hZ2UpIHtcbiAgY29uc3Qgc3JjID0gaW1hZ2UuZGF0YXNldC5zcmM7XG4gIGlmICghc3JjKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgcmV0dXJuIGZldGNoSW1hZ2Uoc3JjKS50aGVuKCgpID0+IHsgYXBwbHlJbWFnZShpbWFnZSwgc3JjKTsgfSk7XG59XG5cbi8qKlxuICogTG9hZCBhbGwgb2YgdGhlIGltYWdlcyBpbW1lZGlhdGVseVxuICogQHBhcmFtIHtOb2RlTGlzdE9mPEVsZW1lbnQ+fSBpbWFnZXNcbiAqL1xuZnVuY3Rpb24gbG9hZEltYWdlc0ltbWVkaWF0ZWx5KGltYWdlcykge1xuICAvLyBmb3JlYWNoKCkgaXMgbm90IHN1cHBvcnRlZCBpbiBJRVxuICBmb3IgKGxldCBpID0gMDsgaSA8IGltYWdlcy5sZW5ndGg7IGkrKykge1xuICAgIGxldCBpbWFnZSA9IGltYWdlc1tpXTtcbiAgICBwcmVsb2FkSW1hZ2UoaW1hZ2UpO1xuICB9XG59XG5cbi8qKlxuICogRGlzY29ubmVjdCB0aGUgb2JzZXJ2ZXJcbiAqL1xuZnVuY3Rpb24gZGlzY29ubmVjdCgpIHtcbiAgaWYgKCFvYnNlcnZlcikge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbn1cblxuLyoqXG4gKiBPbiBpbnRlcnNlY3Rpb25cbiAqIEBwYXJhbSB7YXJyYXl9IGVudHJpZXNcbiAqL1xuZnVuY3Rpb24gb25JbnRlcnNlY3Rpb24oZW50cmllcykge1xuICAvLyBEaXNjb25uZWN0IGlmIHdlJ3ZlIGFscmVhZHkgbG9hZGVkIGFsbCBvZiB0aGUgaW1hZ2VzXG4gIGlmIChpbWFnZUNvdW50ID09PSAwKSB7XG4gICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICB9XG5cbiAgLy8gTG9vcCB0aHJvdWdoIHRoZSBlbnRyaWVzXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZW50cmllcy5sZW5ndGg7IGkrKykge1xuICAgIGxldCBlbnRyeSA9IGVudHJpZXNbaV07XG4gICAgLy8gQXJlIHdlIGluIHZpZXdwb3J0P1xuICAgIGlmIChlbnRyeS5pbnRlcnNlY3Rpb25SYXRpbyA+IDApIHtcbiAgICAgIGltYWdlQ291bnQtLTtcblxuICAgICAgLy8gU3RvcCB3YXRjaGluZyBhbmQgbG9hZCB0aGUgaW1hZ2VcbiAgICAgIG9ic2VydmVyLnVub2JzZXJ2ZShlbnRyeS50YXJnZXQpO1xuICAgICAgcHJlbG9hZEltYWdlKGVudHJ5LnRhcmdldCk7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQXBwbHkgdGhlIGltYWdlXG4gKiBAcGFyYW0ge29iamVjdH0gaW1nXG4gKiBAcGFyYW0ge3N0cmluZ30gc3JjXG4gKi9cbmZ1bmN0aW9uIGFwcGx5SW1hZ2UoaW1nLCBzcmMpIHtcbiAgLy8gUHJldmVudCB0aGlzIGZyb20gYmVpbmcgbGF6eSBsb2FkZWQgYSBzZWNvbmQgdGltZS5cbiAgaW1nLmNsYXNzTGlzdC5hZGQoJ2RjZi1qcy1sYXp5LWltZy0taGFuZGxlZCcpO1xuICBpbWcuc3JjID0gc3JjO1xuICBpbWcuY2xhc3NMaXN0LmFkZCgnZGNmLWpzLWZhZGUtdXAnKTtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29yZS9qcy9hcHAvbGF6eS1sb2FkLmpzXG4vLyBtb2R1bGUgaWQgPSAzMzNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///333\\n\");\n\n    /***/\n  },\n\n  /***/334:\n  /*!***********************************!*\\\n    !*** ./core/js/app/object-fit.js ***!\n    \\***********************************/\n  /*! dynamic exports provided */\n  /*! all exports used */\n  /***/function _(module, exports) {\n\n    eval(\"// Based on https://www.bmorecreativeinc.com/edge-object-fit-fallback-without-polyfill-modernizr/\\n\\nvar results = document.querySelector( '.dcf-js-objfit-check' );\\nvar objectfit = window.getComputedStyle( results, '::before' ).content;\\nif( objectfit == 'none' ) {\\n  // Edge fallback\\n  // Javascript is nearly identical to the Medium article\\n  $( '.dcf-u-objfit-cover' ).parent( 'div' ).addClass( 'dcf-u-objfit-cover-fallback' );\\n  $( '.dcf-u-objfit-cover-fallback' ).each( function() {\\n    var $container = $( this ),\\n      imgUrl = $container.find( 'img' ).prop( 'src' );\\n    if( imgUrl ) {\\n      $container.css( 'backgroundImage', 'url(' + imgUrl + ')' );\\n    }\\n  });\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzM0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY29yZS9qcy9hcHAvb2JqZWN0LWZpdC5qcz9hMGNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEJhc2VkIG9uIGh0dHBzOi8vd3d3LmJtb3JlY3JlYXRpdmVpbmMuY29tL2VkZ2Utb2JqZWN0LWZpdC1mYWxsYmFjay13aXRob3V0LXBvbHlmaWxsLW1vZGVybml6ci9cblxudmFyIHJlc3VsdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCAnLmRjZi1qcy1vYmpmaXQtY2hlY2snICk7XG52YXIgb2JqZWN0Zml0ID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoIHJlc3VsdHMsICc6OmJlZm9yZScgKS5jb250ZW50O1xuaWYoIG9iamVjdGZpdCA9PSAnbm9uZScgKSB7XG4gIC8vIEVkZ2UgZmFsbGJhY2tcbiAgLy8gSmF2YXNjcmlwdCBpcyBuZWFybHkgaWRlbnRpY2FsIHRvIHRoZSBNZWRpdW0gYXJ0aWNsZVxuICAkKCAnLmRjZi11LW9iamZpdC1jb3ZlcicgKS5wYXJlbnQoICdkaXYnICkuYWRkQ2xhc3MoICdkY2YtdS1vYmpmaXQtY292ZXItZmFsbGJhY2snICk7XG4gICQoICcuZGNmLXUtb2JqZml0LWNvdmVyLWZhbGxiYWNrJyApLmVhY2goIGZ1bmN0aW9uKCkge1xuICAgIHZhciAkY29udGFpbmVyID0gJCggdGhpcyApLFxuICAgICAgaW1nVXJsID0gJGNvbnRhaW5lci5maW5kKCAnaW1nJyApLnByb3AoICdzcmMnICk7XG4gICAgaWYoIGltZ1VybCApIHtcbiAgICAgICRjb250YWluZXIuY3NzKCAnYmFja2dyb3VuZEltYWdlJywgJ3VybCgnICsgaW1nVXJsICsgJyknICk7XG4gICAgfVxuICB9KTtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29yZS9qcy9hcHAvb2JqZWN0LWZpdC5qc1xuLy8gbW9kdWxlIGlkID0gMzM0XG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///334\\n\");\n\n    /***/\n  }\n\n  /******/ });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n");

/***/ })
/******/ ]);